# - *- coding: utf- 8 - *-
import telebot
from dotenv import load_dotenv
import os
import random
from telebot import types

env_path = '.env'
config_path = 'config.ini'
load_dotenv(dotenv_path=env_path)
bot = telebot.TeleBot(os.getenv('SLOTSBOT_TELEGRAM_TOKEN'))


# –ü–æ—Ç–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
@bot.message_handler(commands=['start'])
def welcome(message):
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—Ç–∏–∫–µ—Ä
    sti = open('top_heil.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–µ–Ω—é
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    f = open(config_path, 'r')
    lang = f.read(2)
    f.close()
    print(lang)
    if lang == 'EN':
        m1 = types.KeyboardButton("Random number")
        m2 = types.KeyboardButton("Play \"Slots\"")
        m3 = types.KeyboardButton("Change language")
    else:
        m1 = types.KeyboardButton("–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ")
        m2 = types.KeyboardButton("–ò–≥—Ä–∞—Ç—å –≤ \"–°–ª–æ—Ç—ã\"")
        m3 = types.KeyboardButton("–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")
    markup.add(m1, m2, m3)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º –∏ –º–µ–Ω—é
    if lang == 'EN':
        bot.send_message(message.chat.id,
                         "Welcome, {0.first_name}! \n<b>I'm - {1.first_name}</b>".format(message.from_user,
                                                                                       bot.get_me()),
                         parse_mode='html', reply_markup=markup)
    else:
        bot.send_message(message.chat.id,
                         "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}! \n<b>–Ø - {1.first_name}</b>".format(message.from_user,
                                                                                                bot.get_me()),
                         parse_mode='html', reply_markup=markup)


# –ü–æ—Ç–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def respeak(message):
    print(message.text)

    # –ö–Ω–æ–ø–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞
    if message.text == 'Random number' or message.text == '–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ':
        bot.send_message(message.chat.id, str(random.randint(0, 1000)))

    # –°–æ–æ–±—â–µ–Ω–∏–µ + –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∏–≥—Ä—ã –≤ "–°–ª–æ—Ç—ã"
    elif message.text == "Play \"Slots\"" or message.text == "–ò–≥—Ä–∞—Ç—å –≤ \"–°–ª–æ—Ç—ã\"":
        markup = types.InlineKeyboardMarkup(row_width=3)
        f = open(config_path, 'r')
        lang = f.read(2)
        f.close()
        if lang == 'EN':
            b = types.InlineKeyboardButton("Spin!", callback_data='spin')
        else:
            b = types.InlineKeyboardButton("–ö—Ä—É—Ç–∏—Ç—å!", callback_data='spin')
        markup.add(b)
        if lang == 'EN':
            bot.send_message(message.chat.id, "Slots", reply_markup=markup)
        else:
            bot.send_message(message.chat.id, "–°–ª–æ—Ç—ã", reply_markup=markup)

    elif message.text == 'Change language' or message.text == '–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫':
        f = open(config_path, 'r')
        lang = f.read(2)
        f.close()
        if lang == 'EN':
            f = open(config_path, 'w')
            f.write("RU")
            f.close()
            bot.send_message(message.chat.id, "–Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!")
            welcome(message)
        else:
            f = open(config_path, 'w')
            f.write("EN")
            f.close()
            bot.send_message(message.chat.id, "Language successfully changed!")
            welcome(message)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    # else:
    #    bot.send_message(message.chat.id, "–ù–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å")


# –ü–æ—Ç–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback'–æ–≤ (–¥–ª—è inline –∫–Ω–æ–ø–æ–∫)
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:

        # –ö–æ–¥ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ "Play Slots" –≤ –º–µ–Ω—é (—Å–∞–º–∞ –∏–≥—Ä–∞ "–°–ª–æ—Ç-–ú–∞—à–∏–Ω–∞")
        if call.data == 'spin':
            i = 0
            array = []

            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –∑–∞–≤–∏—Å–∏—Ç –≤—ã–∏–≥—Ä—ã—à
            while i < 9:
                array.append(random.randint(0, 4))
                i = i + 1
            new_array = []
            i = 0

            # –ó–∞–º–µ–Ω–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
            while i < 9:
                if array[i] == 0:
                    new_array.append("7Ô∏è‚É£")
                elif array[i] == 1:
                    new_array.append("üçí")
                elif array[i] == 2:
                    new_array.append("üçã")
                elif array[i] == 3:
                    new_array.append("üçé")
                elif array[i] == 4:
                    new_array.append("üçâ")
                i += 1

            # –£–¥–∞–ª–µ–Ω–∏–µ inline-–∫–Ω–æ–ø–∫–∏ —É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–æ—Å—Ç–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–µ "Slots: ")
            bot.edit_message_text(chat_id=call.message.chat.id, reply_markup=None, text=call.message.text,
                                  message_id=call.message.message_id)

            # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ inline-–∫–Ω–æ–ø–æ–∫ "Spin!" –∏ "Exit" –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
            markup = types.InlineKeyboardMarkup(row_width=3)
            f = open('config.ini', 'r')
            lang = f.read(2)
            f.close()
            if lang == 'EN':
                b1 = types.InlineKeyboardButton("Spin!", callback_data='spin')
                b2 = types.InlineKeyboardButton("Exit", callback_data='exit')
            else:
                b1 = types.InlineKeyboardButton("–ö—Ä—É—Ç–∏—Ç—å!", callback_data='spin')
                b2 = types.InlineKeyboardButton("–í—ã—Ö–æ–¥", callback_data='exit')
            markup.add(b1, b2)

            # –ö—Ä–µ–ø–ª–µ–Ω–∏–µ inline-–º–µ–Ω—é (–∫–Ω–æ–ø–∫–∏ "Spin!" –∏ "Exit") –∏ –≤—ã–≤–æ–¥ —Å–ª–æ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            if lang == 'EN':
                bot.send_message(call.message.chat.id, "Your slots:\n{}{}{}\n{}{}{}\n{}{}{}".format(*new_array),
                                 reply_markup=markup)
            else:
                bot.send_message(call.message.chat.id, "–í–∞—à–∏ —Å–ª–æ—Ç—ã:\n{}{}{}\n{}{}{}\n{}{}{}".format(*new_array),
                                 reply_markup=markup)

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–∞ (–Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤)
            # –ü—Ä–∏ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–∏ —É—Å–ª–æ–≤–∏—é –≤—ã–≤–æ–¥–∏—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ–º
            if new_array[0] == new_array[1] == new_array[2] or new_array[3] == new_array[4] == new_array[5] or \
                    new_array[6] == new_array[7] == new_array[8] or new_array[0] == new_array[3] == new_array[6] or \
                    new_array[1] == new_array[4] == new_array[7] or new_array[2] == new_array[5] == new_array[8]:
                bot.answer_callback_query(callback_query_id=call.id, text="Jackpot!!!", show_alert=True)

        # –ö–æ–¥ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ "Exit" –≤ –∏–≥—Ä–µ "Slots" (–ø–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–∏–µ inline-–∫–Ω–æ–ø–æ–∫ "Spin!" –∏ "Exit")
        elif call.data == 'exit':
            bot.edit_message_text(chat_id=call.message.chat.id, reply_markup=None, text=call.message.text,
                                  message_id=call.message.message_id)


bot.polling(none_stop=True)
